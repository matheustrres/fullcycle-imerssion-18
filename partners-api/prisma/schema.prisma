generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum SpotStatus {
  AVAILABLE
  RESERVED
}

enum TicketKind {
  FULL
  HALF
}

enum TicketStatus {
  RESERVED
  CANCELLED
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  date        DateTime
  price       Float
  Spots       Spot[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  @@map("events")
}

model Spot {
  id                   String               @id @default(uuid())
  name                 String
  status               SpotStatus
  Event                Event                @relation(fields: [eventId], references: [id])
  eventId              String
  Ticket               Ticket?
  ReservationHistories ReservationHistory[]
  createdAt            DateTime             @default(now()) @map("created_at")
  updatedAt            DateTime             @default(now()) @map("updated_at")

  @@map("spots")
}

model Ticket {
  id         String     @id @default(uuid())
  email      String
  ticketKind TicketKind
  Spot       Spot       @relation(fields: [spotId], references: [id])
  spotId     String
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @default(now()) @map("updated_at")

  @@unique([spotId])
  @@map("tickets")
}

model ReservationHistory {
  id         String       @id @default(uuid())
  email      String
  ticketKind TicketKind
  status     TicketStatus
  Spot       Spot         @relation(fields: [spotId], references: [id])
  spotId     String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @default(now()) @map("updated_at")
}
